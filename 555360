class BankAccount:
    def __init__(self, account_number, account_holder, balance=0.0):
        self.account_number = account_number
        self.account_holder = account_holder
        self.balance = balance
        
    def deposit(self, amount):
        self.balance += amount
        print(f"Deposited: ${amount}")
        self.get_balance()
    
    def withdraw(self, amount):
        if amount > self.balance:
            print("Insufficient balance for withdrawal.")
        else:
            self.balance -= amount
            print(f"Withdrawn: ${amount}")
            self.get_balance()
            
    def get_balance(self):
        print(f"Current balance: ${self.balance}")

# Create an instance of BankAccount
bank_account = BankAccount('123456789', 'John Doe')
bank_account.deposit(1000)  # Deposit $1000
bank_account.withdraw(500)  # Withdraw $500

# Define a subclass SavingsAccount
class SavingsAccount(BankAccount):
    def __init__(self, account_number, account_holder, interest_rate, balance=0.0):
        super().__init__(account_number, account_holder, balance)
        self.interest_rate = interest_rate

    def apply_interest(self):
        interest = self.balance * (self.interest_rate / 100)
        self.deposit(interest)

    def print_account_details(self):
        print(f"Current balance: ${self.balance}, Interest rate: {self.interest_rate}%")

# Create an instance of SavingsAccount
savings_account = SavingsAccount('987654321', 'Jane Doe', 5)
savings_account.deposit(1000)  # Deposit $1000
savings_account.apply_interest()  # Apply interest
savings_account.print_account_details()  # Print details